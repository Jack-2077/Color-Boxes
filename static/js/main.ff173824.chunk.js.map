{"version":3,"sources":["helpers.js","Box.js","BoxContainer.js","App.js","index.js"],"names":["choice","arr","Math","floor","random","length","Box","props","state","color","handleClick","bind","newColor","this","setState","pickColor","className","style","backgroundColor","onClick","Component","BoxContainer","boxes","Array","from","maxBoxes","map","allColors","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAEA,SAASA,EAAOC,GAEZ,OAAOA,EADSC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,S,WC4BpCC,E,kDAzBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEC,MAAMT,EAAO,EAAKO,MAAME,QACvC,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHJ,E,6CAMnB,WACI,IAAIC,EACJ,GACIA,EAAWZ,EAAOa,KAAKN,MAAME,aACxBG,IAAaC,KAAKL,MAAMC,OAEjCI,KAAKC,SAAS,CAACL,MAAOG,M,yBAG1B,WACIC,KAAKE,c,oBAET,WACI,OACI,qBAAMC,UAAU,MAAMC,MAAO,CAACC,gBAAiBL,KAAKL,MAAMC,OAAQU,QAASN,KAAKH,kB,GAtB1EU,aCAZC,G,kKAMF,WAAU,IAAD,OACCC,EAAQC,MAAMC,KAAK,CAAEnB,OAAQQ,KAAKN,MAAMkB,WACzCC,KAAI,kBAAM,cAAC,EAAD,CAAKjB,MAAO,EAAKF,MAAMoB,eAElC,OAAO,qBAAKX,UAAU,eAAf,SAA+BM,Q,GAVvBF,cAArBC,EACKO,aAAe,CAClBH,SAAU,GACVE,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAC7F,UAAU,UAAY,UAAY,UAAU,UAAW,UAAW,UAAY,YAUnEN,QCRAQ,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ff173824.chunk.js","sourcesContent":["/**Return a random item from a list */\r\n\r\nfunction choice(arr) {\r\n    const randIdx = Math.floor(Math.random() * arr.length)\r\n    return arr[randIdx]\r\n}\r\n\r\nexport {choice}","import React, { Component } from 'react'\r\nimport './Box.css'\r\nimport {choice} from './helpers'\r\n\r\nclass Box extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { color:choice(this.props.color) }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    pickColor() {\r\n        let newColor\r\n        do {\r\n            newColor = choice(this.props.color)\r\n        } while (newColor === this.state.color)\r\n        \r\n        this.setState({color: newColor})\r\n    }\r\n\r\n    handleClick() {\r\n        this.pickColor()\r\n    }\r\n    render() {\r\n        return (\r\n            <div  className=\"Box\" style={{backgroundColor: this.state.color}} onClick={this.handleClick}></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Box","import React, { Component } from 'react'\r\nimport Box from './Box'\r\nimport './BoxContainer.css'\r\n\r\nclass BoxContainer extends Component{\r\n    static defaultProps = {\r\n        maxBoxes: 18,\r\n        allColors: [\"#001f3f\", \"#01FF70\", \"#F012BE\", \"#ffbbee\", \"#fe8a71\", \"#e7d3d3\", \"#ff8b94\", \"#ffd3b6\",\r\n    \"#B10DC9\",\"#6497b1\" , \"#8874a3\",  \"#f4b6c2\",\"#f6abb6\", \"#fe4a49\", \"#2ab7ca\" , \"#84c1ff\"] \r\n    }\r\n    render() {\r\n        const boxes = Array.from({ length: this.props.maxBoxes })\r\n            .map(() => <Box color={this.props.allColors}/>)\r\n        \r\n            return <div className=\"BoxContainer\">{boxes}</div>\r\n    }\r\n}\r\n\r\nexport default BoxContainer","import BoxContainer from \"./BoxContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <BoxContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}